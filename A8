# Team 10: Isabela De Matos, Kate Jeffries, Tyler Loose, Andrew Malone, Benson Scoffield, Christian Taylor 
# Section 003
# Description: Program keeps track of burger customers and their orders.

# Import random library
import random

# Create Order Class
class Order() :
    def __init__(self) :
        self.burger_count = self.randomBurgers()

# Create a Method to Randomly generate a burger count
    def randomBurgers(self) :
        burger_count = random.randint(1,20)
        return burger_count

# Create a Person class
class Person() :
    def __init__(self) :
        self.customer_name = self.randomName()

    def randomName(self) :
        lsCustomers = ["Jefe", "El Guapo", "Lucky Day", "Ned Nederlander", "Dusty Bottoms", "Harry Flugleman", "Carmen", "Invisible Swordsman", "Singing Bush"]
        self.customer_name = (lsCustomers[random.randint(0,8)])
        return self.customer_name
    
# Customer class that inherits from the Person Class
class Customer(Person) :
    def __init__(self):
        super().__init__()
        self.order = Order()
    
# Variable for a Queue and a Dictionary for the customer names   
queue = []
dictCustomers = {}


# Put 100 customers into the queue
for customers in range(0, 99) :
    ocustomer = Customer()
    queue.append(ocustomer)
    

# If statement to not repeat customer names but add burger count to the list
    if ocustomer.customer_name in dictCustomers :
        dictCustomers[ocustomer.customer_name] += ocustomer.order.burger_count
    else :
        dictCustomers[ocustomer.customer_name] = ocustomer.order.burger_count


# Print out each customer and their total burgers ordered sorted by the most number of burgers ordered
listSortedCustomers = sorted(dictCustomers.items(), key=lambda x: x[1],reverse=True)

# For loop evenly spaces the outputs
for customer in listSortedCustomers :
    customer_name = customer[0].ljust(19)
    burgers_ordered = str(customer[1])
    print(customer_name, burgers_ordered)
